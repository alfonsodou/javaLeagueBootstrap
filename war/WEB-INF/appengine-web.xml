<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
  <application>javaleague</application>
  <version>1</version>

  <!--
    Allows App Engine to send multiple requests to one instance in parallel:
  -->
  <threadsafe>true</threadsafe>

  <!-- Configure java.util.logging -->
  <system-properties>
    <property name="java.util.logging.config.file" value="WEB-INF/logging.properties"/>

	<property name="fb_app_id" value="55713260949" />
	<property name="fb_api_key" value="55713260949" />
	<property name="fb_secret" value="071e4e8529ca9aad8072d35b84fa7158" />
	<property name="fb_callback_url" value="http://javaleague.appspot.com/loginfacebook" /> 
    
    <property name="twitter-consumer-key" value="Uc7FmD0Df49LP5MFqFUNg" />
    <property name="twitter-consumer-secret" value="SkTUcxs0Cn9vLHjUMrwZuiEgQlLzfVBhVNBb41AZguI" />
  </system-properties>

  <!--
    HTTP Sessions are disabled by default. To enable HTTP sessions specify:

      <sessions-enabled>true</sessions-enabled>

    It's possible to reduce request latency by configuring your application to
    asynchronously write HTTP session data to the datastore:

      <async-session-persistence enabled="true" />

    With this feature enabled, there is a very small chance your app will see
    stale session data. For details, see
    http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions
  -->

	<sessions-enabled>true</sessions-enabled>

	<!-- Configure serving/caching of GWT files -->
	<static-files>
		<include path="**" />

		<!-- The following line requires App Engine 1.3.2 SDK -->
		<include path="**.nocache.*" expiration="0s" />

		<include path="**.cache.*" expiration="365d" />
		<exclude path="**.gwt.rpc" />
	</static-files>

</appengine-web-app>
